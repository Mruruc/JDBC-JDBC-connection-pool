
-- Table: Address
CREATE TABLE Address (
    address_id GENERATED ALWAYS AS IDENTITY NOT NULL, -- 4 bytes (-2,147,483,648 - 2,147,483,647).
    country VARCHAR(50)  NOT NULL,
    city VARCHAR(50)  NOT NULL,
    street VARCHAR(60)  NOT NULL,
    zip_code CHAR(6)  NOT NULL,
    door_no SMALLINT  NOT NULL, -- 2 bytes (-32,767, 32,767)
    CONSTRAINT Address_pk PRIMARY KEY (address_id)
);

-- check constraint for the  door-no
ALTER TABLE Address 
ADD CONSTRAINT non_negative_door_no
CHECK (
    door_no > 0
);

-- Table: Client
CREATE TABLE Client (
    client_id GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) NOT NULL,
    first_name VARCHAR(50)  NOT NULL,
    last_name VARCHAR(50)  NOT NULL,
    dob DATE  NOT NULL,                           ---------------- 4 bytes, format yyyy-mm-dd,
    gender VARCHAR(6)  NOT NULL,
    phones VARCHAR(15) []  NOT NULL,
    email VARCHAR(50) NOT NULL UNIQUE,
    address_id INT  NOT NULL,
    CONSTRAINT id PRIMARY KEY (client_id)
);

ALTER TABLE Client ADD CONSTRAINT check_dob
CHECK(
    dob > '1990-01-01' AND dob < CURRENT_DATE
);

-- Table: Bank_account
CREATE TABLE Bank_account (
    account_id UUID  NOT NULL,
    balance NUMERIC(10,2) NOT NULL,             --  MONEY 8 bytes, Range (-92233720368547758.08 to +92233720368547758.07).
    open_date DATE  NOT NULL,
    close_date DATE  NOT NULL,
    client_id INT  NOT NULL,
    CONSTRAINT Bank_account_pk PRIMARY KEY (account_id)
);

-- Check for non negative balance 
ALTER TABLE Bank_account 
ADD CONSTRAINT non_negative_balance
CHECK(
    balance >= 0;                                -- >= , >
);

ALTER TABLE Bank_account 
ADD CONSTRAINT valid_account_dates
CHECK(
    open_date <= CURRENT_DATE AND close_date > open_date
);


-- Table: Credit_Card
CREATE TABLE Credit_Card (
    card_id GENERATED ALWAYS AS IDENTITY NOT NULL,
    IBAN UUID  NOT NULL UNIQUE,
    card_limit NUMERIC(10,2)  NOT NULL,
    expiration_date DATE  NOT NULL,
    client_id INT  NOT NULL,
    account_id UUID  NOT NULL,
    CONSTRAINT Credit_Card_pk PRIMARY KEY (card_id)
);

-- Table: Transaction
CREATE TABLE Transaction (
    transaction_id GENERATED ALWAYS AS IDENTITY NOT NULL,
    transaction_type VARCHAR(10)  NOT NULL,
    amount  DECIMAL(10,2)  NOT NULL,
    date_time TIMESTAMP NOT NULL,
    card_id INT,
    account_id UUID  NOT NULL,
    CONSTRAINT Transaction_pk PRIMARY KEY (transaction_id)
);

ALTER TABLE Transaction
ADD CONSTRAINT valid_transaction
CHECK(
    amount > 0 
    AND 
    date_time <= CURRENT_TIMESTAMP
);

-- foreign keys

-- Reference: Client_Address (table: Client)
ALTER TABLE Client ADD CONSTRAINT Client_Address
    FOREIGN KEY (address_id)
    REFERENCES Address (address_id)
    ON DELETE  RESTRICT          --- if address id will be deleted in address table, dbms will arises violates foreign key constraint.
    ON UPDATE  CASCADE 
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: Bank_account_Client (table: Bank_account)
ALTER TABLE Bank_account ADD CONSTRAINT Bank_account_Client
    FOREIGN KEY (client_id)
    REFERENCES Client (client_id)
    ON DELETE  CASCADE 
    ON UPDATE  CASCADE 
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;


-- Reference: Credit_Card_Bank_account (table: Credit_Card)
ALTER TABLE Credit_Card ADD CONSTRAINT Credit_Card_Bank_account
    FOREIGN KEY (account_id)
    REFERENCES Bank_account (account_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: Credit_Card_Client (table: Credit_Card)
ALTER TABLE Credit_Card ADD CONSTRAINT Credit_Card_Client
    FOREIGN KEY (client_id)
    REFERENCES Client (client_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: Transaction_Bank_account (table: Transaction)
ALTER TABLE Transaction ADD CONSTRAINT Transaction_Bank_account
    FOREIGN KEY (account_id)
    REFERENCES Bank_account (account_id)
    ON DELETE CASCADE
    ON UPDATE CASCADE  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: Transaction_Credit_Card (table: Transaction)
ALTER TABLE Transaction ADD CONSTRAINT Transaction_Credit_Card
    FOREIGN KEY (card_id)
    REFERENCES Credit_Card (card_id)  
    ON DELETE CASCADE
    ON UPDATE CASCADE  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;




-- Time Zone Of The Database Server for Poland Warsaw.

SET timezone ='Europe/Warsaw'; -- for the sessions's time zone

-- ALTER DATABASE mydatabase SET timezone TO 'Europe/Warsaw';  -- for the specific database.


-- End of file.

